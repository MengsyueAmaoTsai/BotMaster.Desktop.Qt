{
  "cSpell.words": [
    "Amao",
    "Mengsyue",
    "pyside",
    "Richill",
    "richillcapital",
    "Tsai"
  ],
  // Json
  "[json][jsonc][jsonl]": {
    "editor.formatOnSave": true,
    "editor.defaultFormatter": "vscode.json-language-features",
    "editor.codeActionsOnSave": {
      "source.fixAll": "always"
    }
  },
  "json.schemas": [],
  "json.schemaDownload.enable": true,
  "json.validate.enable": true,
  "json.format.enable": true,
  "json.format.keepLines": false,
  "json.maxItemsComputed": 5000,
  "json.trace.server": "off",
  // Markdown
  "markdownlint.run": "onSave",
  "markdownlint.lintWorkspaceGlobs": [
    "**/*.{md,mkd,mdwn,mdown,markdown,markdn,mdtxt,mdtext,workbook}",
    "!**/bower_components",
    "!**/node_modules",
    "!**/vendor",
    "!**/.git"
  ],
  "markdownlint.ignore": ".markdownlintignore",
  "markdownlint.customRules": [],
  "markdownlint.config": {},
  // TOML
  "[toml]": {
    "editor.formatOnSave": true,
    "editor.defaultFormatter": "tamasfe.even-better-toml"
  },
  "evenBetterToml.completion.maxKeys": 5,
  "evenBetterToml.formatter.alignComments": null,
  "evenBetterToml.formatter.alignEntries": null,
  "evenBetterToml.formatter.allowedBlankLines": null,
  "evenBetterToml.formatter.arrayAutoCollapse": null,
  "evenBetterToml.formatter.arrayAutoExpand": null,
  "evenBetterToml.formatter.arrayTrailingComma": null,
  "evenBetterToml.formatter.columnWidth": null,
  "evenBetterToml.formatter.compactArrays": null,
  "evenBetterToml.formatter.compactEntries": null,
  "evenBetterToml.formatter.compactInlineTables": null,
  "evenBetterToml.formatter.crlf": null,
  "evenBetterToml.formatter.indentEntries": null,
  "evenBetterToml.formatter.indentString": null,
  "evenBetterToml.formatter.indentTables": null,
  "evenBetterToml.formatter.inlineTableExpand": null,
  "evenBetterToml.formatter.reorderArrays": null,
  "evenBetterToml.formatter.reorderKeys": null,
  "evenBetterToml.formatter.trailingNewline": null,
  "evenBetterToml.rules": [],
  "evenBetterToml.schema.associations": {},
  "evenBetterToml.schema.cache.diskExpiration": 600,
  "evenBetterToml.schema.cache.memoryExpiration": 60,
  "evenBetterToml.schema.catalogs": [
    "https://www.schemastore.org/api/json/catalog.json"
  ],
  "evenBetterToml.schema.enabled": true,
  "evenBetterToml.schema.links": false,
  "evenBetterToml.semanticTokens": false,
  "evenBetterToml.syntax.semanticTokens": true,
  "evenBetterToml.taplo.bundled": true,
  "evenBetterToml.taplo.configFile.enabled": true,
  "evenBetterToml.taplo.configFile.path": null,
  // Python
  "[python]": {
    "editor.defaultFormatter": "ms-python.black-formatter",
    "editor.formatOnSave": true,
    "editor.codeActionsOnSave": {
      "source.organizeImports": "always",
      "source.fixAll": "always"
    },
    "editor.wordBasedSuggestions": false,
    "editor.inlineSuggest.suppressSuggestions": false,
    "diffEditor.ignoreTrimWhitespace": false,
    "gitlens.codeLens.symbolScopes": [
      "!Module"
    ],
  },
  "python.activeStateToolPath": "state",
  "python.autoComplete.extraPaths": [],
  "python.createEnvironment.contentButton": "hide",
  "python.createEnvironment.trigger": "prompt",
  "python.defaultInterpreterPath": "python",
  "python.envFile": "${workspaceFolder}/.env",
  "python.globalModuleInstallation": false,
  "python.languageServer": "Default",
  "python.missingPackage.severity": "Hint",
  "python.pipenvPath": "pipenv",
  "python.poetryPath": "poetry",
  "python.REPL.enableREPLSmartSend": true,
  "python.terminal.activateEnvInCurrentTerminal": false,
  "python.terminal.activateEnvironment": true,
  "python.terminal.executeInFileDir": false,
  "python.terminal.focusAfterLaunch": false,
  "python.terminal.launchArgs": [],
  "python.testing.autoTestDiscoverOnSaveEnabled": true,
  "python.testing.cwd": null,
  "python.testing.debugPort": 3000,
  "python.testing.promptToConfigure": true,
  "python.testing.pytestArgs": [],
  "python.testing.pytestEnabled": false,
  "python.testing.pytestPath": "pytest",
  "python.testing.unittestEnabled": false,
  "python.testing.unittestArgs": [
    "-v",
    "-s",
    ".",
    "-p",
    "*test*.py"
  ],
  // Pylance
  "python.analysis.typeCheckingMode": "strict",
  "python.analysis.diagnosticMode": "workspace",
  "python.analysis.include": [],
  "python.analysis.exclude": [],
  "python.analysis.ignore": [],
  "python.analysis.stubPath": "typings",
  "python.analysis.autoSearchPaths": true,
  "python.analysis.extraPaths": [],
  "python.analysis.diagnosticSeverityOverrides": {
    "reportAssertAlwaysTrue": "error",
    "reportCallInDefaultInitializer": "error",
    "reportConstantRedefinition": "error",
    "reportDeprecated": "error",
    "reportDuplicateImport": "error",
    "reportFunctionMemberAccess": "error",
    "reportGeneralTypeIssues": "error",
    "reportImplicitOverride": "error",
    "reportImplicitStringConcatenation": "error",
    "reportImportCycles": "error",
    "reportIncompatibleMethodOverride": "error",
    "reportIncompatibleVariableOverride": "error",
    "reportIncompleteStub": "error",
    "reportInconsistentConstructor": "error",
    "reportInvalidStringEscapeSequence": "error",
    "reportInvalidStubStatement": "error",
    "reportInvalidTypeVarUse": "error",
    "reportMatchNotExhaustive": "error",
    "reportMissingImports": "error",
    "reportMissingModuleSource": "error",
    "reportMissingParameterType": "error",
    "reportMissingSuperCall": "none",
    "reportMissingTypeArgument": "error",
    "reportMissingTypeStubs": "error",
    "reportOptionalCall": "error",
    "reportOptionalContextManager": "error",
    "reportOptionalIterable": "error",
    "reportOptionalMemberAccess": "error",
    "reportOptionalOperand": "error",
    "reportOptionalSubscript": "error",
    "reportOverlappingOverload": "error",
    "reportPrivateImportUsage": "error",
    "reportPrivateUsage": "error",
    "reportPropertyTypeMismatch": "error",
    "reportSelfClsParameterName": "error",
    "reportShadowedImports": "error",
    "reportTypeCommentUsage": "error",
    "reportTypedDictNotRequiredAccess": "error",
    "reportUnboundVariable": "error",
    "reportUndefinedVariable": "error",
    "reportUninitializedInstanceVariable": "error",
    "reportUnknownArgumentType": "error",
    "reportUnknownLambdaType": "error",
    "reportUnknownMemberType": "information",
    "reportUnknownParameterType": "error",
    "reportUnknownVariableType": "error",
    "reportUnnecessaryCast": "error",
    "reportUnnecessaryComparison": "error",
    "reportUnnecessaryContains": "error",
    "reportUnnecessaryIsInstance": "error",
    "reportUnnecessaryTypeIgnoreComment": "error",
    "reportUnsupportedDunderAll": "error",
    "reportUntypedBaseClass": "error",
    "reportUntypedClassDecorator": "error",
    "reportUntypedFunctionDecorator": "error",
    "reportUntypedNamedTuple": "error",
    "reportUnusedCallResult": "error",
    "reportUnusedClass": "error",
    "reportUnusedCoroutine": "error",
    "reportUnusedExpression": "error",
    "reportUnusedFunction": "error",
    "reportUnusedImport": "error",
    "reportUnusedVariable": "information",
    "reportWildcardImportFromLibrary": "error",
  },
  "python.analysis.useLibraryCodeForTypes": true,
  "python.analysis.indexing": true,
  "python.analysis.userFileIndexingLimit": 2000,
  "python.analysis.packageIndexDepths": [
    {
      "name": "sklearn",
      "depth": 2
    },
    {
      "name": "matplotlib",
      "depth": 2
    },
    {
      "name": "scipy",
      "depth": 2
    },
    {
      "name": "django",
      "depth": 2
    },
    {
      "name": "flask",
      "depth": 2
    },
    {
      "name": "fastapi",
      "depth": 2
    }
  ],
  "python.analysis.autoImportCompletions": false,
  "python.analysis.importFormat": "absolute",
  "python.analysis.completeFunctionParens": false,
  "python.analysis.inlayHints.variableTypes": false,
  "python.analysis.inlayHints.functionReturnTypes": false,
  "python.analysis.inlayHints.callArgumentNames": "off",
  "python.analysis.inlayHints.pytestParameters": false,
  "python.analysis.fixAll": [],
  "python.analysis.enablePytestExtra": true,
  "python.analysis.enablePytestSupport": true,
  "python.analysis.autoFormatStrings": false,
  "python.analysis.addImport.exactMatchOnly": false,
  "python.analysis.enableSyncServer": false,
  "python.analysis.extraCommitChars": true,
  "python.analysis.gotoDefinitionInStringLiteral": true,
  "python.analysis.logLevel": "Information",
  "python.analysis.persistAllIndices": true,
  "python.analysis.typeshedPaths": [],
  // isort
  "isort.args": [
    "--profile",
    "black",
  ],
  "isort.check": false,
  "isort.importStrategy": "useBundled",
  "isort.interpreter": [],
  "isort.path": [],
  "isort.severity": {
    "W": "Warning",
    "E": "Hint"
  },
  // Black
  "black-formatter.args": [],
  "black-formatter.importStrategy": "useBundled",
  "black-formatter.interpreter": [],
  "black-formatter.path": [],
  // flake8
  "flake8.args": [],
  "flake8.cwd": "${workspaceFolder}",
  "flake8.ignorePatterns": [],
  "flake8.importStrategy": "useBundled",
  "flake8.interpreter": [],
  "flake8.path": [],
  "flake8.severity": {
    "E": "Error",
    "F": "Error",
    "I": "Information",
    "W": "Warning"
  },
  // autopep8
  "autopep8.args": [],
  "autopep8.importStrategy": "useBundled",
  "autopep8.interpreter": [],
  "autopep8.path": [],
  // Pylint
  "pylint.args": [],
  "pylint.cwd": "${workspaceFolder}",
  "pylint.ignorePatterns": [],
  "pylint.importStrategy": "useBundled",
  "pylint.interpreter": [],
  "pylint.path": [],
  "pylint.severity": {
    "convention": "Information",
    "error": "Error",
    "fatal": "Error",
    "refactor": "Hint",
    "warning": "Warning",
    "info": "Information"
  },
  // Pyright
  "pyright.disableLanguageServices": false,
  "pyright.disableOrganizeImports": false,
  "python.pythonPath": "python",
  // Mypy
  "mypy-type-checker.args": [],
  "mypy-type-checker.cwd": "${workspaceFolder}",
  "mypy-type-checker.ignorePatterns": [],
  "mypy-type-checker.importStrategy": "useBundled",
  "mypy-type-checker.interpreter": [],
  "mypy-type-checker.path": [],
  "mypy-type-checker.preferDaemon": false,
  "mypy-type-checker.reportingScope": "file",
  "mypy-type-checker.severity": {
    "error": "Error",
    "note": "Information"
  }
}